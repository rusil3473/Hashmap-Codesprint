import { notFound } from 'next/navigation';
import dbConnect from '@/utils/dbConnect';
import MedicineSearch from '@/models/Medicine';
import { Medicine } from '../../[searchId]/page';

interface Result {
  Medicine: Medicine
}

interface PageProps {
  params: {
    query: string;
  };
}

export default async function MedicineSearchResultPage({ params }: PageProps) {
  await dbConnect();
  const { query } = await params;
  const decodedQuery = decodeURIComponent(query)

  const searchResult = await MedicineSearch.findOne({ searchType: 'name', query: decodedQuery });

  if (!searchResult) {
    notFound();
  }

  let resultData: Result | null = null;
  try {
    resultData = JSON.parse(searchResult.result || "{}");
  } catch (e) {
    console.error("Error parsing result JSON:", e);
    resultData = null;
  }

  if (!resultData) notFound()
  const mr = resultData.Medicine
  const renderResult = () => {
    return (
      <div>
        <p><strong>Name:</strong> {mr.name}</p>
        <p>Function: {mr.function}</p>
        <p>Common Uses: {mr.commonUses ? mr.commonUses.join(', ') : 'N/A'}</p>
        {mr.dosageInformation && (
          <div>
            <p><strong>Dosage Information:</strong></p>
            <p>Adults: {mr.dosageInformation.adults || "N/A"}</p>
            <p>Children: {mr.dosageInformation.children || "N/A"}</p>
            <p>Special Populations: {mr.dosageInformation.specialPopulations || "N/A"}</p>
            <p>Dosage Forms: {mr.dosageInformation.dosageForms || "N/A"}</p>
            <p>General Notes: {mr.dosageInformation.generalNotes || "N/A"}</p>
          </div>
        )}
        <p>Administration: {mr.administration}</p>
        <p>Side Effects: {mr.sideEffects ? mr.sideEffects.join(', ') : 'N/A'}</p>
        <p>Additional Info: {mr.additionalInfo}</p>
      </div>
    );
  }
  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Medicine Search Results</h1>
      <h2 className="text-xl font-semibold mb-2">Query: {decodedQuery}</h2>
      <h3 className="text-lg mb-4">Search Type: name</h3>
      {resultData ? (
        renderResult()
      ) : (
        <p>Loading...</p>
      )}
      <p className="mt-8 text-sm text-gray-600">
        <strong>Disclaimer:</strong> This information is generated by an AI and is not a substitute for professional medical advice. Always consult with a qualified healthcare provider for any health concerns.
      </p>
    </div>
  );
}